import { SvelteComponentTyped } from "svelte";
import { OverlayScrollbars } from 'overlayscrollbars';
import type { Props } from './OverlayScrollbarsComponent.types';
declare const __propDef: {
    props: {
        [x: string]: any;
        element?: Props['element'];
        options?: Props['options'];
        events?: Props['events'];
        defer?: Props['defer'];
        osInstance?: (() => OverlayScrollbars | null) | undefined;
        getElement?: (() => HTMLElement | null) | undefined;
    };
    events: {
        osInitialized: CustomEvent<[instance: OverlayScrollbars]>;
        osUpdated: CustomEvent<[instance: OverlayScrollbars, onUpdatedArgs: import("overlayscrollbars").OnUpdatedEventListenerArgs]>;
        osDestroyed: CustomEvent<[instance: OverlayScrollbars, canceled: boolean]>;
        osScroll: CustomEvent<[instance: OverlayScrollbars, event: Event]>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export type OverlayScrollbarsComponentProps = typeof __propDef.props;
export type OverlayScrollbarsComponentEvents = typeof __propDef.events;
export type OverlayScrollbarsComponentSlots = typeof __propDef.slots;
export default class OverlayScrollbarsComponent extends SvelteComponentTyped<OverlayScrollbarsComponentProps, OverlayScrollbarsComponentEvents, OverlayScrollbarsComponentSlots> {
    get osInstance(): () => OverlayScrollbars | null;
    get getElement(): () => HTMLElement | null;
}
export {};
