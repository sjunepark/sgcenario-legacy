export const createDefer = () => {
    /* c8 ignore start */
    if (typeof window === 'undefined') {
        // mock ssr calls with "noop"
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        const noop = () => { };
        return [noop, noop];
    }
    /* c8 ignore end */
    let idleId;
    let rafId;
    const wnd = window;
    const idleSupported = typeof wnd.requestIdleCallback === 'function';
    const rAF = wnd.requestAnimationFrame;
    const cAF = wnd.cancelAnimationFrame;
    const rIdle = idleSupported ? wnd.requestIdleCallback : rAF;
    const cIdle = idleSupported ? wnd.cancelIdleCallback : cAF;
    const clear = () => {
        cIdle(idleId);
        cAF(rafId);
    };
    return [
        (callback, options) => {
            clear();
            idleId = rIdle(idleSupported
                ? () => {
                    clear();
                    // inside idle its best practice to use rAF to change DOM for best performance
                    rafId = rAF(callback);
                }
                : callback, typeof options === 'object' ? options : { timeout: 2233 });
        },
        clear,
    ];
};
