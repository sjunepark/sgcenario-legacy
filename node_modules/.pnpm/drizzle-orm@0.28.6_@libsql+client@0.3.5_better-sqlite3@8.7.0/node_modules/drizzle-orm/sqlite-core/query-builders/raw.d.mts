import { entityKind } from '../../entity.js';
import type { SQL, SQLWrapper } from '../../index.js';
import { QueryPromise } from '../../query-promise.js';
type SQLiteRawAction = 'all' | 'get' | 'values' | 'run';
export interface SQLiteRawConfig {
    action: SQLiteRawAction;
}
export declare class SQLiteRaw<TRunResult> extends QueryPromise<TRunResult> implements SQLWrapper {
    private cb;
    private getSQLCb;
    static readonly [entityKind]: string;
    constructor(cb: () => Promise<TRunResult>, getSQLCb: () => SQL, action: SQLiteRawAction);
    execute(): Promise<TRunResult>;
}
export {};
